<!DOCTYPE html>
<!-- saved from url=(0100)https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3 -->
<html lang="en" style="height:100%;"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    

    <title>App Academy Open</title>
    <meta name="title" content="App Academy Open - Learn To Code Online For Free">
    <meta name="description" content="App Academy Open is the first free, online web development course that&#39;s meant to get you hired as a developer. Get free access to App Academy&#39;s entire full-stack curriculum, which has placed thousands in jobs as software engineers. It includes over 1,500 hours of readings, videos, projects and more.">
    <meta name="author" content="AppAcademy">
    <meta name="viewport" content="width=device-width, user-scalable=no">

    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="https://open.appacademy.io/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://open.appacademy.io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://open.appacademy.io/favicon-16x16.png">
    <link rel="mask-icon" href="https://open.appacademy.io/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <!-- Twitter -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@appacademyio">

    <!-- Open Graph -->
    <meta property="og:title" content="App Academy Open">
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://s3-us-west-2.amazonaws.com/open.appacademy.io/app-academy-open.png">
    <meta property="og:url" content="https://open.appacademy.io/">
    <meta property="og:description" content="Learn to code online with access to App Academy’s entire full-stack course for free">

    <!-- Segment -->
    <script type="text/javascript" async="" src="./recap_exercise_3_problem_descriptions_files/amplitude-5.2.2-min.gz.js"></script><script type="text/javascript" async="" src="./recap_exercise_3_problem_descriptions_files/analytics.js"></script><script type="text/javascript" async="" src="./recap_exercise_3_problem_descriptions_files/analytics.min.js"></script><script>
      var writeKey =
        window.location.origin === 'https://open.appacademy.io'
          ? '8hftbcs12U7B3OEYXijfp4yssjQ0VKEL'
          : 'LFQBdFhanhjComnt0nrwPgRBLtz7Wpku';
      !(function() {
        var analytics = (window.analytics = window.analytics || []);
        if (!analytics.initialize)
          if (analytics.invoked)
            window.console &&
              console.error &&
              console.error('Segment snippet included twice.');
          else {
            analytics.invoked = !0;
            analytics.methods = [
              'trackSubmit',
              'trackClick',
              'trackLink',
              'trackForm',
              'pageview',
              'identify',
              'reset',
              'group',
              'track',
              'ready',
              'alias',
              'debug',
              'page',
              'once',
              'off',
              'on',
            ];
            analytics.factory = function(t) {
              return function() {
                var e = Array.prototype.slice.call(arguments);
                e.unshift(t);
                analytics.push(e);
                return analytics;
              };
            };
            for (var t = 0; t < analytics.methods.length; t++) {
              var e = analytics.methods[t];
              analytics[e] = analytics.factory(e);
            }
            analytics.load = function(t, e) {
              var n = document.createElement('script');
              n.type = 'text/javascript';
              n.async = !0;
              n.src =
                'https://cdn.segment.com/analytics.js/v1/' +
                t +
                '/analytics.min.js';
              var a = document.getElementsByTagName('script')[0];
              a.parentNode.insertBefore(n, a);
              analytics._loadOptions = e;
            };
            analytics.SNIPPET_VERSION = '4.1.0';
            analytics.load(writeKey);
            analytics.page();
          }
      })();
    </script>

    <!-- Stripe -->
    <script src="./recap_exercise_3_problem_descriptions_files/saved_resource"></script>

    <style>
      #blackout {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: 100;
        background: rgba(0, 0, 0, 0.8);
      }

      div#spinner {
        box-sizing: border-box;
        display: block;
        position: absolute;
        left: 50%;
        top: 50%;
        width: 54px;
        height: 54px;
        border: 4px solid #fff;
        border-radius: 50%;
        animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        border-color: #fff transparent transparent transparent;
      }
      div:nth-child(1) {
        animation-delay: -0.45s;
      }
      div:nth-child(2) {
        animation-delay: -0.3s;
      }
      div:nth-child(3) {
        animation-delay: -0.15s;
      }
      @keyframes lds-ring {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  <style data-emotion=""></style><style data-styled="" data-styled-version="4.4.0"></style><style type="text/css">.ReactTable{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;border:1px solid rgba(0,0,0,0.1);}.ReactTable *{box-sizing:border-box}.ReactTable .rt-table{-webkit-box-flex:1;-ms-flex:auto 1;flex:auto 1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;width:100%;border-collapse:collapse;overflow:auto}.ReactTable .rt-thead{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.ReactTable .rt-thead.-headerGroups{background:rgba(0,0,0,0.03);border-bottom:1px solid rgba(0,0,0,0.05)}.ReactTable .rt-thead.-filters{border-bottom:1px solid rgba(0,0,0,0.05);}.ReactTable .rt-thead.-filters input,.ReactTable .rt-thead.-filters select{border:1px solid rgba(0,0,0,0.1);background:#fff;padding:5px 7px;font-size:inherit;border-radius:3px;font-weight:normal;outline:none}.ReactTable .rt-thead.-filters .rt-th{border-right:1px solid rgba(0,0,0,0.02)}.ReactTable .rt-thead.-header{box-shadow:0 2px 15px 0 rgba(0,0,0,0.15)}.ReactTable .rt-thead .rt-tr{text-align:center}.ReactTable .rt-thead .rt-th,.ReactTable .rt-thead .rt-td{padding:5px 5px;line-height:normal;position:relative;border-right:1px solid rgba(0,0,0,0.05);transition:box-shadow .3s cubic-bezier(.175,.885,.32,1.275);box-shadow:inset 0 0 0 0 transparent;}.ReactTable .rt-thead .rt-th.-sort-asc,.ReactTable .rt-thead .rt-td.-sort-asc{box-shadow:inset 0 3px 0 0 rgba(0,0,0,0.6)}.ReactTable .rt-thead .rt-th.-sort-desc,.ReactTable .rt-thead .rt-td.-sort-desc{box-shadow:inset 0 -3px 0 0 rgba(0,0,0,0.6)}.ReactTable .rt-thead .rt-th.-cursor-pointer,.ReactTable .rt-thead .rt-td.-cursor-pointer{cursor:pointer}.ReactTable .rt-thead .rt-th:last-child,.ReactTable .rt-thead .rt-td:last-child{border-right:0}.ReactTable .rt-thead .rt-resizable-header{overflow:visible;}.ReactTable .rt-thead .rt-resizable-header:last-child{overflow:hidden}.ReactTable .rt-thead .rt-resizable-header-content{overflow:hidden;text-overflow:ellipsis}.ReactTable .rt-thead .rt-header-pivot{border-right-color:#f7f7f7}.ReactTable .rt-thead .rt-header-pivot:after,.ReactTable .rt-thead .rt-header-pivot:before{left:100%;top:50%;border:solid transparent;content:" ";height:0;width:0;position:absolute;pointer-events:none}.ReactTable .rt-thead .rt-header-pivot:after{border-color:rgba(255,255,255,0);border-left-color:#fff;border-width:8px;margin-top:-8px}.ReactTable .rt-thead .rt-header-pivot:before{border-color:rgba(102,102,102,0);border-left-color:#f7f7f7;border-width:10px;margin-top:-10px}.ReactTable .rt-tbody{-webkit-box-flex:99999;-ms-flex:99999 1 auto;flex:99999 1 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:auto;}.ReactTable .rt-tbody .rt-tr-group{border-bottom:solid 1px rgba(0,0,0,0.05);}.ReactTable .rt-tbody .rt-tr-group:last-child{border-bottom:0}.ReactTable .rt-tbody .rt-td{border-right:1px solid rgba(0,0,0,0.02);}.ReactTable .rt-tbody .rt-td:last-child{border-right:0}.ReactTable .rt-tbody .rt-expandable{cursor:pointer;text-overflow:clip}.ReactTable .rt-tr-group{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.ReactTable .rt-tr{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.ReactTable .rt-th,.ReactTable .rt-td{-webkit-box-flex:1;-ms-flex:1 0 0px;flex:1 0 0;white-space:nowrap;text-overflow:ellipsis;padding:7px 5px;overflow:hidden;transition:.3s ease;transition-property:width,min-width,padding,opacity;}.ReactTable .rt-th.-hidden,.ReactTable .rt-td.-hidden{width:0 !important;min-width:0 !important;padding:0 !important;border:0 !important;opacity:0 !important}.ReactTable .rt-expander{display:inline-block;position:relative;margin:0;color:transparent;margin:0 10px;}.ReactTable .rt-expander:after{content:'';position:absolute;width:0;height:0;top:50%;left:50%;-webkit-transform:translate(-50%,-50%) rotate(-90deg);transform:translate(-50%,-50%) rotate(-90deg);border-left:5.04px solid transparent;border-right:5.04px solid transparent;border-top:7px solid rgba(0,0,0,0.8);transition:all .3s cubic-bezier(.175,.885,.32,1.275);cursor:pointer}.ReactTable .rt-expander.-open:after{-webkit-transform:translate(-50%,-50%) rotate(0);transform:translate(-50%,-50%) rotate(0)}.ReactTable .rt-resizer{display:inline-block;position:absolute;width:36px;top:0;bottom:0;right:-18px;cursor:col-resize;z-index:10}.ReactTable .rt-tfoot{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;box-shadow:0 0 15px 0 rgba(0,0,0,0.15);}.ReactTable .rt-tfoot .rt-td{border-right:1px solid rgba(0,0,0,0.05);}.ReactTable .rt-tfoot .rt-td:last-child{border-right:0}.ReactTable.-striped .rt-tr.-odd{background:rgba(0,0,0,0.03)}.ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover{background:rgba(0,0,0,0.05)}.ReactTable .-pagination{z-index:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:3px;box-shadow:0 0 15px 0 rgba(0,0,0,0.1);border-top:2px solid rgba(0,0,0,0.1);}.ReactTable .-pagination input,.ReactTable .-pagination select{border:1px solid rgba(0,0,0,0.1);background:#fff;padding:5px 7px;font-size:inherit;border-radius:3px;font-weight:normal;outline:none}.ReactTable .-pagination .-btn{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:block;width:100%;height:100%;border:0;border-radius:3px;padding:6px;font-size:1em;color:rgba(0,0,0,0.6);background:rgba(0,0,0,0.1);transition:all .1s ease;cursor:pointer;outline:none;}.ReactTable .-pagination .-btn[disabled]{opacity:.5;cursor:default}.ReactTable .-pagination .-btn:not([disabled]):hover{background:rgba(0,0,0,0.3);color:#fff}.ReactTable .-pagination .-previous,.ReactTable .-pagination .-next{-webkit-box-flex:1;-ms-flex:1;flex:1;text-align:center}.ReactTable .-pagination .-center{-webkit-box-flex:1.5;-ms-flex:1.5;flex:1.5;text-align:center;margin-bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ReactTable .-pagination .-pageInfo{display:inline-block;margin:3px 10px;white-space:nowrap}.ReactTable .-pagination .-pageJump{display:inline-block;}.ReactTable .-pagination .-pageJump input{width:70px;text-align:center}.ReactTable .-pagination .-pageSizeOptions{margin:3px 10px}.ReactTable .rt-noData{display:block;position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background:rgba(255,255,255,0.8);transition:all .3s ease;z-index:1;pointer-events:none;padding:20px;color:rgba(0,0,0,0.5)}.ReactTable .-loading{display:block;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(255,255,255,0.8);transition:all .3s ease;z-index:-1;opacity:0;pointer-events:none;}.ReactTable .-loading > div{position:absolute;display:block;text-align:center;width:100%;top:50%;left:0;font-size:15px;color:rgba(0,0,0,0.6);-webkit-transform:translateY(-52%);transform:translateY(-52%);transition:all .3s cubic-bezier(.25,.46,.45,.94)}.ReactTable .-loading.-active{opacity:1;z-index:2;pointer-events:all;}.ReactTable .-loading.-active > div{-webkit-transform:translateY(50%);transform:translateY(50%)}.ReactTable .rt-resizing .rt-th,.ReactTable .rt-resizing .rt-td{transition:none !important;cursor:col-resize;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}</style></head>
  <body style="height:100%;">
    <section id="root" style="height:100%;"><section class="sc-fihHvN dtGRlT"><nav class="sc-iELTvK sc-fjhmcy kqrAod"><section class="sc-fjdhpX TrQbR"><section class="sc-jzJRlG dtzbwR"><section class="sc-dxgOiQ AJLGi"><i name="rightArrow" class="sc-bdVaJa dwUOjP sc-kGXeez hIqAWj"><svg viewBox="0 0 25 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.328.284a.99.99 0 0 0-1.39 0c-.397.38-.397.948 0 1.327l7.69 7.387H.991c-.546 0-.992.425-.992.947s.446.947.992.947h20.685l-7.787 7.39c-.398.379-.398.946 0 1.326.197.188.445.285.693.285a.995.995 0 0 0 .694-.285l9.425-8.998c.397-.38.397-.948 0-1.327L15.328.284z"></path></svg></i><h3 class="sc-cSHVUG VLQzD">Software Engineering Foundations</h3></section><h5 class="sc-chPdSV iuEout">Tasks</h5></section><section id="TaskNavScroll" class="sc-kAzzGY eGKEqW"><ul><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Introduction</h3></div><div><time class="sc-iwsKbI dTnHgI">02:12:15</time><span class="sc-gZMcBi bRISaA">14/14</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Introduction</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/welcome" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Welcome</span><time class="sc-bxivhb jnQYjO">00:01:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/course-guidelines" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Course Guidelines</span><time class="sc-bxivhb jnQYjO">00:03:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/ruby-environment-setup" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Ruby Environment Setup</span><time class="sc-bxivhb jnQYjO">00:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/terminal-basics-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Terminal Basics Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/terminal-and-vscode-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Terminal And VScode Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Environment Setup for Windows</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/installing-linux---ruby-on-windows" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Installing Linux &amp; Ruby on Windows</span><time class="sc-bxivhb jnQYjO">00:35:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/installing-wsl-and-ubuntu" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Installing WSL And Ubuntu</span><time class="sc-bxivhb jnQYjO">00:08:44</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/installing-vs-code--windows-" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Installing VS Code (Windows)</span><time class="sc-bxivhb jnQYjO">00:05:19</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/configuring-git--windows-" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Configuring Git (Windows)</span><time class="sc-bxivhb jnQYjO">00:01:35</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/installing-chrome--windows-" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Installing Chrome (Windows)</span><time class="sc-bxivhb jnQYjO">00:02:37</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/installing-ubuntu--vs-code--chrome--and-git" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Installing Ubuntu, VS Code, Chrome, and Git</span><time class="sc-bxivhb jnQYjO">00:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/wsl-and-ubuntu-18-04-lts" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>WSL and Ubuntu 18.04 LTS</span><time class="sc-bxivhb jnQYjO"></time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/vs-code-home-page--windows-" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>VS Code Home Page (Windows)</span><time class="sc-bxivhb jnQYjO"></time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/git-home-page--windows-" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Git Home Page (Windows)</span><time class="sc-bxivhb jnQYjO"></time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Advanced Ruby</h3></div><div><time class="sc-iwsKbI dTnHgI">02:58:00</time><span class="sc-gZMcBi bRISaA">13/13</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/becoming-a-rubyist-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Becoming A Rubyist Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/common-enumerables-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Common Enumerables Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/using-documentation-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Using Documentation Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/symbols-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Symbols Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/symbols-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Symbols Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/default-arguments-and-option-hashes-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Default Arguments And Option Hashes Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/default-args-and-option-hashes-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Default Args and Option Hashes Lecture</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/splat-operator-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Splat Operator Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/splat-operator-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Splat Operator Lecture</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/inject-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Inject Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/inject-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Inject Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/advanced-methods-exercise" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Advanced Methods Exercise</span><time class="sc-bxivhb jnQYjO">01:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/advanced-methods-exercise-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Advanced Methods Exercise Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Scope &amp; References</h3></div><div><time class="sc-iwsKbI dTnHgI">03:45:00</time><span class="sc-gZMcBi bRISaA">10/10</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Algorithm Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bubble-sort-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bubble Sort Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bubble-sort-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bubble Sort Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Algorithm Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/algorithmic-strategies-exercise" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Algorithmic Strategies Exercise</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/algorithmic-strategies-exercise-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Algorithmic Strategies Exercise Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Scope &amp; References Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/scope-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Scope Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/scope-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Scope Lecture</span><time class="sc-bxivhb jnQYjO">00:12:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/variable-references-lecture-1" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Variable References Lecture 1</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/variable-references-lecture-2" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Variable References Lecture 2</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Scope &amp; References Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/references-exercise" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>References Exercise</span><time class="sc-bxivhb jnQYjO">00:45:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/references-exercise-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>References Exercise Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">RSpec</h3></div><div><time class="sc-iwsKbI dTnHgI">06:43:00</time><span class="sc-gZMcBi bRISaA">10/10</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/intro-to-testing-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Intro To Testing Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Lecture</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/exceptions-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Exceptions Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-1" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 1</span><time class="sc-bxivhb jnQYjO">02:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-1-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 1 Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-1-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 1 Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-2" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 2</span><time class="sc-bxivhb jnQYjO">02:00:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-2-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 2 Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-2-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>RSpec Exercise 2 Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Debugging</h3></div><div><time class="sc-iwsKbI dTnHgI">04:30:00</time><span class="sc-gZMcBi bRISaA">10/10</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/pry-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Pry Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/pry-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Pry Lecture</span><time class="sc-bxivhb jnQYjO">00:12:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bye-bug-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bye Bug Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bye-bug-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bye Bug Lecture</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/common-error-types-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Common Error Types Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/common-error-types-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Common Error Types Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/debugging-exercise-1" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Debugging Exercise 1</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/debugging-exercise-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Debugging Exercise 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/debugging-exercise-2" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Debugging Exercise 2</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/debugging-exercise-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Debugging Exercise 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Blocks &amp; Procs</h3></div><div><time class="sc-iwsKbI dTnHgI">04:45:00</time><span class="sc-gZMcBi bRISaA">9/9</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Blocks</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/blocks-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Blocks Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/blocks-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Blocks Project</span><time class="sc-bxivhb jnQYjO">01:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/blocks-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Blocks Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/blocks-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Blocks Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Procs</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/procs-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Procs Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/procs-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Procs Lecture</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/procs-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Procs Project</span><time class="sc-bxivhb jnQYjO">01:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/procs-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Procs Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/procs-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Procs Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Classes</h3></div><div><time class="sc-iwsKbI dTnHgI">06:30:00</time><span class="sc-gZMcBi bRISaA">11/11</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Class Fundamentals</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/class-basics-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Class Basics Notes</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/class-basics-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Class Basics Lecture</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/instance-vs-class-variables-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Instance Vs Class Variables Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/instance-vs-class-variables-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Instance Vs Class Variables Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/instance-vs-class-methods-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Instance Vs Class Methods Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/instance-vs-class-methods-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Instance Vs Class Methods Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Dog Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/dog-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Dog Project</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/dog-project-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Dog Project Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Bootcamp Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bootcamp-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bootcamp Project</span><time class="sc-bxivhb jnQYjO">02:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bootcamp-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bootcamp Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/bootcamp-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Bootcamp Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Class Monkey Patching</h3></div><div><time class="sc-iwsKbI dTnHgI">03:10:00</time><span class="sc-gZMcBi bRISaA">4/4</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Monkey Patching</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/monkey-patching-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Monkey Patching Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/monkey-patching-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Monkey Patching Project</span><time class="sc-bxivhb jnQYjO">02:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/monkey-patching-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Monkey Patching Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/monkey-patching-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Monkey Patching Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Input/Output</h3></div><div><time class="sc-iwsKbI dTnHgI">09:31:00</time><span class="sc-gZMcBi bRISaA">13/13</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">I/O Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/requiring-files-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Requiring Files Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/requiring-files-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Requiring Files Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/user-input-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>User Input Notes</span><time class="sc-bxivhb jnQYjO">00:06:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/user-input-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>User Input Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Guessing Game Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/guessing-game-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Guessing Game Project</span><time class="sc-bxivhb jnQYjO">02:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/guessing-game-project-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Guessing Game Project Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Hangman Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hangman-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hangman Project</span><time class="sc-bxivhb jnQYjO">02:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hangman-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hangman Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hangman-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hangman Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Hotel Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hotel-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hotel Project</span><time class="sc-bxivhb jnQYjO">02:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hotel-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hotel Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hotel-project-part-2a-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hotel Project Part 2A Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/hotel-project-part-2b-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Hotel Project Part 2B Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Object Oriented Programming</h3></div><div><time class="sc-iwsKbI dTnHgI">12:47:00</time><span class="sc-gZMcBi bRISaA">18/18</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Attr Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/abstraction-and-encapsulation-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Abstraction And Encapsulation Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/attr-methods-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Attr Methods Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/attr-methods-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Attr Methods Lecture</span><time class="sc-bxivhb jnQYjO">00:12:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Startup Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/startup-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Startup Project</span><time class="sc-bxivhb jnQYjO">02:45:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/startup-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Startup Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/startup-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Startup Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/startup-project-part-3-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Startup Project Part 3 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Syntactic Sugar</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/syntactic-sugar-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Syntactic Sugar Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/syntactic-sugar-lecture-1" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Syntactic Sugar Lecture 1</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/syntactic-sugar-lecture-2" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Syntactic Sugar Lecture 2</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Mastermind Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/mastermind-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Mastermind Project</span><time class="sc-bxivhb jnQYjO">03:00:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/mastermind-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Mastermind Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/mastermind-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Mastermind Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/mastermind-project-part-3-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Mastermind Project Part 3 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Battleship Project</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/battleship-project" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Battleship Project</span><time class="sc-bxivhb jnQYjO">03:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/battleship-project-part-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Battleship Project Part 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/battleship-project-part-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Battleship Project Part 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/battleship-project-part-3-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Battleship Project Part 3 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw eabbfg"><div class="sc-VigVT cQowiX"><div class="sc-EHOje dbiXyt"></div><h3 class="sc-dnqmqq kcAQXs">Recursion</h3></div><div><time class="sc-iwsKbI dTnHgI">02:20:00</time><span class="sc-gZMcBi bRISaA">8/8</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><header class="sc-gqjmRU kvshPl">Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursion-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursion Notes</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursion-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursion Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursive-factorial-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursive Factorial Notes</span><time class="sc-bxivhb jnQYjO">00:06:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursive-factorial-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursive Factorial Lecture</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursive-fib-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursive Fib Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursive-fib-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursive Fib Lecture</span><time class="sc-bxivhb jnQYjO">00:06:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursion-exercise" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursion Exercise</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recursive-exercise-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recursive Exercise Walkthrough</span><time class="sc-bxivhb jnQYjO">00:20:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw FNOmt"><div class="sc-VigVT cQowiX"><div class="sc-EHOje bHyegM"></div><h3 class="sc-dnqmqq jLQnpZ">Foundations Recap</h3></div><div><time class="sc-iwsKbI dTnHgI">06:50:00</time><span class="sc-gZMcBi bRISaA">10/13</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM jVdNVs"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM dzXQnY"><li><header class="sc-gqjmRU kvshPl">Lectures</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-section" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Section</span><time class="sc-bxivhb jnQYjO">00:02:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/spaceship-operator-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Spaceship Operator Notes</span><time class="sc-bxivhb jnQYjO">00:08:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/spaceship-operator-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Spaceship Operator Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/nil-as-falsey-notes" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Nil as Falsey Notes</span><time class="sc-bxivhb jnQYjO">00:10:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/nil-as-falsey-lecture" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Nil as Falsey Lecture</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li><li><header class="sc-gqjmRU kvshPl">Exercises</header><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-1" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Exercise 1</span><time class="sc-bxivhb jnQYjO">00:45:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-1-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Exercise 1 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:25:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-2" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Exercise 2</span><time class="sc-bxivhb jnQYjO">00:45:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-2-walkthrough" class="sc-bwzfXH bVGRHL"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Exercise 2 Walkthrough</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3" class="sc-bwzfXH kCACoR"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">✔︎</i>Recap Exercise 3</span><time class="sc-bxivhb jnQYjO">03:00:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3-walkthrough-part-a" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">►</i>Recap Exercise 3 Walkthrough Part A</span><time class="sc-bxivhb jnQYjO">00:30:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3-walkthrough-part-b" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">►</i>Recap Exercise 3 Walkthrough Part B</span><time class="sc-bxivhb jnQYjO">00:05:00</time></a></li><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3-walkthrough-part-c" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">►</i>Recap Exercise 3 Walkthrough Part C</span><time class="sc-bxivhb jnQYjO">00:15:00</time></a></li></ul></li></ul></li><li class="sc-htoDjs lmwFtC"><header class="sc-gzVnrw hryBmL"><div class="sc-VigVT cQowiX"><div class="sc-EHOje czyNSO"></div><h3 class="sc-dnqmqq kcAQXs">Additional Projects</h3></div><div><time class="sc-iwsKbI dTnHgI">26:25:00</time><span class="sc-gZMcBi bRISaA">0/9</span><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-jTzLTM bvmPTc"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></div></header><ul class="sc-bZQynM ejdvex"><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-3" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>RSpec Exercise 3</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-4" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>RSpec Exercise 4</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/rspec-exercise-5" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>RSpec Exercise 5</span><time class="sc-bxivhb jnQYjO">01:15:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/nauseating-numbers" class="sc-bwzfXH gYxKFG"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">●</i>Nauseating Numbers</span><time class="sc-bxivhb jnQYjO">04:00:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/perilous-procs" class="sc-bwzfXH gYxKFG"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">●</i>Perilous Procs</span><time class="sc-bxivhb jnQYjO">04:00:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/meddling-medley" class="sc-bwzfXH gYxKFG"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">●</i>Meddling Medley</span><time class="sc-bxivhb jnQYjO">03:30:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/flight-project" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>Flight Project</span><time class="sc-bxivhb jnQYjO">01:10:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/tictactoe-project" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>TicTacToe Project</span><time class="sc-bxivhb jnQYjO">05:00:00</time></a></li></ul></li><li><ul><li><a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/todoboard-project" class="sc-bwzfXH kYPYFF"><span class="sc-htpNat cIoUmx"><i class="sc-ifAKCX kjChso">⬆︎</i>TodoBoard Project</span><time class="sc-bxivhb jnQYjO">05:00:00</time></a></li></ul></li></ul></li></ul></section></section></nav><header class="sc-gxMtzJ eKCPIG"><nav class="sc-dfVpRl gfUjRz"><ul class="sc-gzOgki ePdksB"><li class="sc-iyvyFf hJeyE"><a target="_blank" rel="noreferrer noopener" class="sc-hwwEjo egBhAY"><i name="hamburger" class="sc-bdVaJa dwUOjP sc-gNJABI sc-yZwTr iwawfn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25"><path d="M0 .042h25v4.316H0V.042zm0 17.266h25v4.317H0v-4.317zm0-8.633h25v4.317H0V8.675z"><animate fill="freeze" dur="1s" begin="indefinite" attributeName="d" values="M0,0.042 L25,0.042 L25,4.358 L0,4.358 L0,0.042 Z M0,17.308 L25,17.308 L25,21.625 L0,21.625 L0,17.308 Z M0,8.675 L25,8.675 L25,12.992 L0,12.992 L0,8.675 Z;M0.411520694,11.7969991 L11.3746064,0.211661892 L14.240285,2.96962459 L3.2453918,14.79509 L0.411520694,11.7969991 Z M3.12030464,8.95263387 L14.1458873,20.5001128 L11.3497633,23.4045177 L0.423283622,11.7998104 L3.12030464,8.95263387 Z M3.08750203,9.675 L26,9.675 L26,13.992 L3.08750203,13.992 L3.08750203,9.675 Z" calcMode="spline" keySplines="0.4 0 0.2 1"></animate><animate fill="freeze" dur="1s" begin="indefinite" attributeName="d" values="M0.411520694,11.7969991 L11.3746064,0.211661892 L14.240285,2.96962459 L3.2453918,14.79509 L0.411520694,11.7969991 Z M3.12030464,8.95263387 L14.1458873,20.5001128 L11.3497633,23.4045177 L0.423283622,11.7998104 L3.12030464,8.95263387 Z M3.08750203,9.675 L26,9.675 L26,13.992 L3.08750203,13.992 L3.08750203,9.675 Z;M0,0.042 L25,0.042 L25,4.358 L0,4.358 L0,0.042 Z M0,17.308 L25,17.308 L25,21.625 L0,21.625 L0,17.308 Z M0,8.675 L25,8.675 L25,12.992 L0,12.992 L0,8.675 Z" calcMode="spline" keySplines="0.4 0 0.2 1"></animate></path></svg></i></a></li></ul><h2 class="sc-kPVwWT cGaokl">Recap Exercise 3</h2><ul class="sc-gzOgki ePdksB"><li class="sc-iyvyFf hJeyE"><a target="_blank" rel="noreferrer noopener" class="sc-hwwEjo hiWpTu">Profile</a></li><li class="sc-iyvyFf hJeyE"><a href="https://launchpass.com/p/app-academy-mentor" target="_blank" rel="noreferrer noopener" class="sc-hwwEjo hiWpTu"><i name="mentor" class="sc-bdVaJa dwUOjP sc-gNJABI ldLyNF"><svg viewBox="0 0 18 25" xmlns="http://www.w3.org/2000/svg"><path d="M17.857 20.629v3.078a.618.618 0 0 1-.616.616H4.31a.618.618 0 0 1-.616-.616v-4.003A10.24 10.24 0 0 1 0 11.823V2.155A1.847 1.847 0 0 1 1.909.308c1.016.03 1.785.923 1.785 1.908v8.56c0 2.371 1.94 4.31 4.311 4.31h.461c-1.877-.708-3.232-2.494-3.232-4.618a4.94 4.94 0 0 1 4.926-4.926 4.94 4.94 0 0 1 4.926 4.926c0 2.124-1.355 3.91-3.232 4.618h.461c3.049 0 5.542 2.494 5.542 5.542z" fill-rule="evenodd"></path></svg></i></a></li><li class="sc-iyvyFf hJeyE"><a target="_blank" rel="noreferrer noopener" class="sc-hwwEjo egBhAY"><i name="slack" class="sc-bdVaJa dwUOjP sc-gNJABI eYKMXk"><svg viewBox="0 0 25 25" xmlns="http://www.w3.org/2000/svg"><path d="M5.26 15.795a2.63 2.63 0 0 1-2.625 2.624 2.63 2.63 0 0 1-2.623-2.624 2.63 2.63 0 0 1 2.623-2.624H5.26v2.624zm1.321 0a2.63 2.63 0 0 1 2.624-2.624 2.63 2.63 0 0 1 2.624 2.624v6.57a2.63 2.63 0 0 1-2.624 2.623 2.63 2.63 0 0 1-2.624-2.623v-6.57zM9.205 5.259a2.63 2.63 0 0 1-2.624-2.624A2.63 2.63 0 0 1 9.205.012a2.63 2.63 0 0 1 2.624 2.623V5.26H9.205zm0 1.322a2.63 2.63 0 0 1 2.624 2.624 2.63 2.63 0 0 1-2.624 2.624h-6.57A2.63 2.63 0 0 1 .012 9.205a2.63 2.63 0 0 1 2.623-2.624h6.57zm10.536 2.624a2.63 2.63 0 0 1 2.624-2.624 2.63 2.63 0 0 1 2.623 2.624 2.63 2.63 0 0 1-2.623 2.624H19.74V9.205zm-1.322 0a2.63 2.63 0 0 1-2.624 2.624 2.63 2.63 0 0 1-2.624-2.624v-6.57A2.63 2.63 0 0 1 15.795.012a2.63 2.63 0 0 1 2.624 2.623v6.57zm-2.624 10.536a2.63 2.63 0 0 1 2.624 2.624 2.63 2.63 0 0 1-2.624 2.623 2.63 2.63 0 0 1-2.624-2.623V19.74h2.624zm0-1.322a2.63 2.63 0 0 1-2.624-2.624 2.63 2.63 0 0 1 2.624-2.624h6.57a2.63 2.63 0 0 1 2.623 2.624 2.63 2.63 0 0 1-2.623 2.624h-6.57z"></path></svg></i></a></li><li class="sc-iyvyFf hJeyE"><a href="https://forum.appacademy.io/" target="_blank" rel="noreferrer noopener" class="sc-hwwEjo egBhAY"><i name="questionMark" class="sc-bdVaJa dwUOjP sc-gNJABI eYKMXk"><svg viewBox="0 0 25 25" xmlns="http://www.w3.org/2000/svg"><path d="M23.954 6.108s-.791-3.815-4.208-5.155C18.136.335 15.178.028 12.294 0 9.44.026 6.48.335 4.872.953 1.456 2.293.664 6.108.664 6.108.153 8.274 0 10.464 0 12.422c0 1.934.153 4.125.664 6.29 0 0 .792 3.814 4.208 5.155 1.609.618 4.542.927 7.425.952 2.882-.026 5.817-.308 7.424-.952 3.416-1.34 4.208-5.156 4.208-5.156.511-2.164.69-4.354.664-6.287.025-1.959-.13-4.15-.639-6.316zm-10.61 12.19h-1.941v-1.673h1.939V18.3l.001-.001zm.023-4.2v.98h-1.964v-2.81h.97c.816 0 1.48-.67 1.48-1.494a1.49 1.49 0 0 0-1.48-1.496c-.816 0-1.48.67-1.48 1.496H8.93c0-1.907 1.53-3.48 3.445-3.48 1.886 0 3.443 1.546 3.443 3.48 0 1.57-1.021 2.912-2.45 3.323z"></path></svg></i></a></li></ul></nav></header><section class="sc-cNQqM kzTawl"><section id="task-scroll-container" class="sc-clBsIJ iYVjwC"><header class="sc-kfGgVZ bDGQNr"><header class="sc-esjQYD jPJzor"><h1 class="sc-kIPQKe erIitW">Recap Exercise 3</h1><ul class="sc-eXEjpC bxurQV"><li><p class="sc-ibxdXY hTNvkF">⏱ 3 hours</p></li><li><p class="sc-ibxdXY hTNvkF">✅ Completed</p></li></ul></header></header><ul class="sc-hXRMBi eBhTjv sc-eMRERa bLJmaP"><li class="sc-epnACN gCOtfU"><a class="sc-iQNlJl jdohhx">Catalog</a><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-bsbRJL jNmmln"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></li><li class="sc-epnACN gCOtfU"><a class="sc-iQNlJl jdohhx">Full Stack Online</a><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-bsbRJL jNmmln"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></li><li class="sc-epnACN gCOtfU"><a class="sc-iQNlJl jdohhx">Software Engineering Foundations</a><i name="arrowDown" class="sc-bdVaJa dwUOjP sc-bsbRJL jNmmln"><svg viewBox="0 0 8 5" xmlns="http://www.w3.org/2000/svg"><path d="M6.303 0L3.568 2.735.832 0 0 .832 3.568 4.4 7.135.832z" fill-rule="evenodd"></path></svg></i></li><li class="sc-epnACN gCOtfU"><a class="sc-iQNlJl kVsIAu">Recap Exercise 3</a></li></ul><section class="sc-dRCTWM edsdEc"><section class="sc-brqgnP gYSzuT sc-bJHhxl dHctkM"><h2>More Problems!</h2><p>The following problems do not have specs and cover many different topics. You'll want to follow the prompt for each problem and make sure your implementation satisfies the behavior in the given examples. Create a <code class="sc-cMljjf hbDMZX">.rb</code> file to work in and test your code manually by running <code class="sc-cMljjf hbDMZX">ruby &lt;your-file-name&gt;.rb</code>!</p><h3>General Problems</h3><h4>no_dupes?</h4><p>Write a method <code class="sc-cMljjf hbDMZX">no_dupes?(arr)</code> that accepts an array as an arg and returns an new array containing the elements that were not repeated in the array.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
no_dupes<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">4</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>         <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [3, 4]</span>
no_dupes<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(230, 219, 116);">'x'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'x'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'y'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'z'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'z'</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; ['y']</span>
no_dupes<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(102, 217, 239);">true</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(102, 217, 239);">true</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(102, 217, 239);">true</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>            <span class="token" style="color: rgb(119, 128, 144);"># =&gt; []</span></code></pre><h4>no_consecutive_repeats?</h4><p>Write a method <code class="sc-cMljjf hbDMZX">no_consecutive_repeats?(arr)</code> that accepts an array as an arg. The method should return true if an element never appears consecutively in the array; it should return false otherwise.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
no_consecutive_repeats<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(230, 219, 116);">'cat'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'dog'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'mouse'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'dog'</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
no_consecutive_repeats<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(230, 219, 116);">'cat'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'dog'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'dog'</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(230, 219, 116);">'mouse'</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; false</span>
no_consecutive_repeats<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">10</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">42</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">7</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">10</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>              <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
no_consecutive_repeats<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">10</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">42</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">10</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>              <span class="token" style="color: rgb(119, 128, 144);"># =&gt; false</span>
no_consecutive_repeats<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(230, 219, 116);">'x'</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>                              <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span></code></pre><h4>char_indices</h4><p>Write a method <code class="sc-cMljjf hbDMZX">char_indices(str)</code> that takes in a string as an arg. The method should return a hash containing characters as keys.
The value associated with each key should be an array containing the indices where that character is found.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
char_indices<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'mississippi'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; {"m"=&gt;[0], "i"=&gt;[1, 4, 7, 10], "s"=&gt;[2, 3, 5, 6], "p"=&gt;[8, 9]}</span>
char_indices<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'classroom'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; {"c"=&gt;[0], "l"=&gt;[1], "a"=&gt;[2], "s"=&gt;[3, 4], "r"=&gt;[5], "o"=&gt;[6, 7], "m"=&gt;[8]}</span></code></pre><h4>longest_streak</h4><p>Write a method <code class="sc-cMljjf hbDMZX">longest_streak(str)</code> that accepts a string as an arg. The method should return the longest streak of consecutive characters in the string. If there are any ties, return the streak that occurs later in the string.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
longest_streak<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'a'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>           <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 'a'</span>
longest_streak<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'accccbbb'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>    <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 'cccc'</span>
longest_streak<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'aaaxyyyyyzz'</span><span class="token" style="color: rgb(248, 248, 242);">)</span> <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 'yyyyy</span>
longest_streak<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'aaabbb'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>      <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 'bbb'</span>
longest_streak<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'abc'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>         <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 'c'</span></code></pre><h4>bi_prime?</h4><p>Write a method <code class="sc-cMljjf hbDMZX">bi_prime?(num)</code> that accepts a number as an arg and returns a boolean indicating whether or not the number is a bi-prime. A bi-prime is a positive integer that can be obtained by multiplying two prime numbers.</p><p>For Example:</p><ul><li><code class="sc-cMljjf hbDMZX">14</code> is a bi-prime because <code class="sc-cMljjf hbDMZX">2 * 7</code></li><li><code class="sc-cMljjf hbDMZX">22</code> is a bi-prime because <code class="sc-cMljjf hbDMZX">2 * 11</code></li><li><code class="sc-cMljjf hbDMZX">25</code> is a bi-prime because <code class="sc-cMljjf hbDMZX">5 * 5</code></li><li><code class="sc-cMljjf hbDMZX">24</code> is not a bi-prime because no two prime numbers have a product of <code class="sc-cMljjf hbDMZX">24</code></li></ul><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">14</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">22</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">25</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">94</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; true</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">24</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; false</span>
bi_prime<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">64</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; false</span></code></pre><h4>vigenere_cipher</h4><p>A Caesar cipher takes a word and encrypts it by offsetting each letter in the word by a fixed number, called the key. Given a key of 3, for example: a -&gt; d, p -&gt; s, and y -&gt; b.</p><p>A Vigenere Cipher is a Caesar cipher, but instead of a single key, a sequence of keys is used. For example, if we encrypt "bananasinpajamas" with the key sequence <a href="https://open.appacademy.io/learn/full-stack-online/software-engineering-foundations/recap-exercise-3" target="_blank">1, 2, 3</a>, then the result would be "ccqbpdtkqqcmbodt":</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Message:  b a n a n a s i n p a j a m a s</span>
<span class="token" style="color: rgb(119, 128, 144);"># Keys:     1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1</span>
<span class="token" style="color: rgb(119, 128, 144);"># Result:   c c q b p d t k q q c m b o d t</span></code></pre><p>Write a method <code class="sc-cMljjf hbDMZX">vigenere_cipher(message, keys)</code> that accepts a string and a key-sequence as args, returning the encrypted message. Assume that the message consists of only lowercase alphabetic characters.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
vigenere_cipher<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">"toerrishuman"</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "upfssjtivnbo"</span>
vigenere_cipher<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">"toerrishuman"</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "uqftsktjvobp"</span>
vigenere_cipher<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">"toerrishuman"</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>  <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "uqhstltjxncq"</span>
vigenere_cipher<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">"zebra"</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">0</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>            <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "ceerd"</span>
vigenere_cipher<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">"yawn"</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">[</span><span class="token" style="color: rgb(174, 129, 255);">5</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">]</span><span class="token" style="color: rgb(248, 248, 242);">)</span>             <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "dbbo"</span></code></pre><h4>vowel_rotate</h4><p>Write a method <code class="sc-cMljjf hbDMZX">vowel_rotate(str)</code> that accepts a string as an arg and returns the string where every vowel is replaced with the vowel the appears before it sequentially in the original string. The first vowel of the string should be replaced with the last vowel.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
vowel_rotate<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'computer'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>      <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "cempotur"</span>
vowel_rotate<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'oranges'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>       <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "erongas"</span>
vowel_rotate<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'headphones'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>    <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "heedphanos"</span>
vowel_rotate<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'bootcamp'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>      <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "baotcomp"</span>
vowel_rotate<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(230, 219, 116);">'awesome'</span><span class="token" style="color: rgb(248, 248, 242);">)</span>       <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "ewasemo"</span></code></pre><h3>Proc Problems</h3><h4>String#select</h4><p>Extend the string class by defining a <code class="sc-cMljjf hbDMZX">String#select</code> method that accepts a block. The method should return a new string containing characters of the original string that return true when passed into the block. If no block is passed, then return the empty string. Do not use the built-in <code class="sc-cMljjf hbDMZX">Array#select</code> in your solution.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
<span class="token" style="color: rgb(230, 219, 116);">"app academy"</span><span class="token" style="color: rgb(248, 248, 242);">.</span>select <span class="token" style="color: rgb(248, 248, 242);">{</span> <span class="token" style="color: rgb(248, 248, 242);">|</span>ch<span class="token" style="color: rgb(248, 248, 242);">|</span> <span class="token" style="color: rgb(248, 248, 242);">!</span><span class="token" style="color: rgb(230, 219, 116);">"aeiou"</span><span class="token" style="color: rgb(248, 248, 242);">.</span>include<span class="token" style="color: rgb(248, 248, 242);">?</span><span class="token" style="color: rgb(248, 248, 242);">(</span>ch<span class="token" style="color: rgb(248, 248, 242);">)</span> <span class="token" style="color: rgb(248, 248, 242);">}</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "pp cdmy"</span>
<span class="token" style="color: rgb(230, 219, 116);">"HELLOworld"</span><span class="token" style="color: rgb(248, 248, 242);">.</span>select <span class="token" style="color: rgb(248, 248, 242);">{</span> <span class="token" style="color: rgb(248, 248, 242);">|</span>ch<span class="token" style="color: rgb(248, 248, 242);">|</span> ch <span class="token" style="color: rgb(248, 248, 242);">==</span> ch<span class="token" style="color: rgb(248, 248, 242);">.</span>upcase <span class="token" style="color: rgb(248, 248, 242);">}</span>          <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "HELLO"</span>
<span class="token" style="color: rgb(230, 219, 116);">"HELLOworld"</span><span class="token" style="color: rgb(248, 248, 242);">.</span>select          <span class="token" style="color: rgb(119, 128, 144);"># =&gt; ""</span></code></pre><h4>String#map!</h4><p>Extend the string class by defining a <code class="sc-cMljjf hbDMZX">String#map!</code> method that accepts a block. The method should modify the existing string by replacing every character with the result of calling the block, passing in the original character and it's index. Do not use the built-in <code class="sc-cMljjf hbDMZX">Array#map</code> or <code class="sc-cMljjf hbDMZX">Array#map!</code> in your solution.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
word_1 <span class="token" style="color: rgb(248, 248, 242);">=</span> <span class="token" style="color: rgb(230, 219, 116);">"Lovelace"</span>
word_1<span class="token" style="color: rgb(248, 248, 242);">.</span>map<span class="token" style="color: rgb(248, 248, 242);">!</span> <span class="token" style="color: rgb(102, 217, 239);">do</span> <span class="token" style="color: rgb(248, 248, 242);">|</span>ch<span class="token" style="color: rgb(248, 248, 242);">|</span> 
    <span class="token" style="color: rgb(102, 217, 239);">if</span> ch <span class="token" style="color: rgb(248, 248, 242);">==</span> <span class="token" style="color: rgb(230, 219, 116);">'e'</span>
        <span class="token" style="color: rgb(230, 219, 116);">'3'</span>
    <span class="token" style="color: rgb(102, 217, 239);">elsif</span> ch <span class="token" style="color: rgb(248, 248, 242);">==</span> <span class="token" style="color: rgb(230, 219, 116);">'a'</span>
        <span class="token" style="color: rgb(230, 219, 116);">'4'</span>
    <span class="token" style="color: rgb(102, 217, 239);">else</span>
        ch
    <span class="token" style="color: rgb(102, 217, 239);">end</span>
<span class="token" style="color: rgb(102, 217, 239);">end</span>
p word_1        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "Lov3l4c3"</span>

word_2 <span class="token" style="color: rgb(248, 248, 242);">=</span> <span class="token" style="color: rgb(230, 219, 116);">"Dijkstra"</span>
word_2<span class="token" style="color: rgb(248, 248, 242);">.</span>map<span class="token" style="color: rgb(248, 248, 242);">!</span> <span class="token" style="color: rgb(102, 217, 239);">do</span> <span class="token" style="color: rgb(248, 248, 242);">|</span>ch<span class="token" style="color: rgb(248, 248, 242);">,</span> i<span class="token" style="color: rgb(248, 248, 242);">|</span>
    <span class="token" style="color: rgb(102, 217, 239);">if</span> i<span class="token" style="color: rgb(248, 248, 242);">.</span>even<span class="token" style="color: rgb(248, 248, 242);">?</span>
        ch<span class="token" style="color: rgb(248, 248, 242);">.</span>upcase
    <span class="token" style="color: rgb(102, 217, 239);">else</span>
        ch<span class="token" style="color: rgb(248, 248, 242);">.</span>downcase
    <span class="token" style="color: rgb(102, 217, 239);">end</span>
<span class="token" style="color: rgb(102, 217, 239);">end</span>
p word_2        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; "DiJkStRa"</span></code></pre><h3>Recursion Problems</h3><h4>multiply</h4><p>Write a method <code class="sc-cMljjf hbDMZX">multiply(a, b)</code> that takes in two numbers and returns their product.</p><ul><li>You must solve this recursively (no loops!)</li><li>You must not use the multiplication (*) operator</li></ul><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">5</span><span class="token" style="color: rgb(248, 248, 242);">)</span>        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 15</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">5</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">)</span>        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 15</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">4</span><span class="token" style="color: rgb(248, 248, 242);">)</span>        <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 8</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">0</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">10</span><span class="token" style="color: rgb(248, 248, 242);">)</span>       <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 0</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">-</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">-</span><span class="token" style="color: rgb(174, 129, 255);">6</span><span class="token" style="color: rgb(248, 248, 242);">)</span>      <span class="token" style="color: rgb(119, 128, 144);"># =&gt; 18</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(248, 248, 242);">-</span><span class="token" style="color: rgb(174, 129, 255);">6</span><span class="token" style="color: rgb(248, 248, 242);">)</span>       <span class="token" style="color: rgb(119, 128, 144);"># =&gt; -18</span>
multiply<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(248, 248, 242);">-</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">,</span> <span class="token" style="color: rgb(174, 129, 255);">6</span><span class="token" style="color: rgb(248, 248, 242);">)</span>       <span class="token" style="color: rgb(119, 128, 144);"># =&gt; -18</span></code></pre><h4>lucas_sequence</h4><p>The Lucas Sequence is a sequence of numbers. The first number of the sequence is 2. The second number of the Lucas Sequence is 1. To generate the next number of the sequence, we add up the previous two numbers. For example, the first six numbers of the sequence are: 2, 1, 3, 4, 7, 11, ...</p><p>Write a method <code class="sc-cMljjf hbDMZX">lucasSequence</code> that accepts a number representing a length as an arg. The method should return an array containing the Lucas Sequence up to the given length. Solve this recursively.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">0</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; []</span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">1</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2]    </span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">2</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 1]</span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">3</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 1, 3]</span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">6</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 1, 3, 4, 7, 11]</span>
lucas_sequence<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">8</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 1, 3, 4, 7, 11, 18, 29]</span></code></pre><h4>prime_factorization</h4><p><a href="https://en.wikipedia.org/wiki/Fundamental_theorem_of_arithmetic" target="_blank">The Fundamental Theorem of Arithmetic</a> states that every positive integer is either a prime or can be represented as a product of prime numbers.</p><p>Write a method <code class="sc-cMljjf hbDMZX">prime_factorization(num)</code> that accepts a number and returns an array representing the prime factorization of the given number. This means that the array should contain only prime numbers that multiply together to the given num. The array returned should contain numbers in ascending order. Do this recursively.</p><pre style="color: rgb(248, 248, 242); background: rgb(45, 45, 45); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; overflow: auto; font-size: 16px;"><code style="color: rgb(248, 248, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; font-size: 16px;"><span class="token" style="color: rgb(119, 128, 144);"># Examples</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">12</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 2, 3]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">24</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 2, 2, 3]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">25</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [5, 5]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">60</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2, 2, 3, 5]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">7</span><span class="token" style="color: rgb(248, 248, 242);">)</span>      <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [7]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">11</span><span class="token" style="color: rgb(248, 248, 242);">)</span>     <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [11]</span>
prime_factorization<span class="token" style="color: rgb(248, 248, 242);">(</span><span class="token" style="color: rgb(174, 129, 255);">2017</span><span class="token" style="color: rgb(248, 248, 242);">)</span>   <span class="token" style="color: rgb(119, 128, 144);"># =&gt; [2017]</span></code></pre></section><section class="sc-kxynE eqPPHU sc-jQMNup haWyYD" title="Did you find this lesson helpful?" color="" filter="" width="600"><header color="" class="sc-cooIXK HcdXO">Did you find this lesson helpful?</header><form class="sc-fcdeBU bbMLr"><label color="" filter="" class="sc-ebFjAB sc-kaNhvL jkVLGJ"><input type="checkbox" color="" filter="" class="sc-jKVCRD cNXBQQ"><span color="" filter="" class="sc-LKuAh kjjkTz">No</span></label><div color="" class="sc-gmeYpB jEaxLF"></div><label color="" filter="" class="sc-ebFjAB sc-kaNhvL jkVLGJ"><input type="checkbox" color="" filter="" class="sc-jKVCRD cDXBIY"><span color="" filter="" class="sc-LKuAh kjjkTz">Yes</span></label></form></section><section class="sc-cgHJcJ gsexqx"><div class="sc-hizQCF hriIto"><section class="sc-cmTdod fXWuue"><div class="sc-elJkPf kGihuW sc-hARARD cejLa" aria-disabled="false" style="position: relative;"><button color="secondary" class="sc-ckVGcZ caGneh sc-bYSBpT cQPGqF"><strong class="sc-btzYZH jnwQTV">✔︎ Submit Project</strong></button><input accept=".zip" type="file" autocomplete="off" style="position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; opacity: 1e-05; pointer-events: none;"></div></section><a download="" target="_blank" href="https://s3-us-west-1.amazonaws.com/aao-alpha/assets/topics/recap/projects/recap_exercise_3_solution.rb.zip" class="sc-eHgmQL ibrMvi sc-ccLTTT fNJEzS"><button color="secondary" class="sc-ckVGcZ caGneh sc-cvbbAY bfDgzV"><strong class="sc-jWBwVP cmStyc">Download Solution</strong></button></a><button class="sc-ckVGcZ caGneh sc-ghsgMZ bQmJmK" color="secondary">Continue To Next Page ➞</button></div><section class="sc-brqgnP gYSzuT sc-eNPDpu fCVcWm"><p>Great work, We have received <strong><a href="https://s3-us-west-2.amazonaws.com/aao-files/6fdfac02-a438-5bd0-a7fd-a2269ff31e90/4b397a1b-89ac-4e8c-9fed-3a4b3b9518ab/submission.zip">Your Submission</a></strong> and marked this task as complete.</p><p>Click continue to move on to the next task!</p></section></section></section></section></section></section><ul class="sc-bbkauy Ahsnw"></ul></section>
  <script type="text/javascript" src="./recap_exercise_3_problem_descriptions_files/main.js"></script>

<iframe frameborder="0" allowtransparency="true" scrolling="no" name="__privateStripeMetricsController5960" allowpaymentrequest="true" src="./recap_exercise_3_problem_descriptions_files/m-outer-c24e335c6ecfefe514d6ff32b3c40a6f.html" aria-hidden="true" tabindex="-1" style="border: none !important; margin: 0px !important; padding: 0px !important; width: 1px !important; min-width: 100% !important; overflow: hidden !important; display: block !important; visibility: hidden !important; position: fixed !important; height: 1px !important; pointer-events: none !important; user-select: none !important;"></iframe></body></html>